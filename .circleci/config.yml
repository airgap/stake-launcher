version: 2.1
orbs:
  twilio: circleci/twilio@1.0.0
executors:
  windows:
    machine:
      image: windows-server-2022-gui:current
  macos:
    macos:
      xcode: "14.2.0"
  linux:
    docker:
      - image: circleci/node:latest

jobs:
  build-windows:
    executor: windows
    resource_class: windows.medium
    steps:
      - checkout
      - run:
          name: Install Node.js
          command: nvm install 20
      - run:
          name: Install npm packages
          command: npm ci
      - run:
          name: Build Windows binary
          command: npm run make
      - persist_to_workspace:
          root: .
          paths:
            - out/

  build-macos:
    executor: macos
    resource_class: macos.m1.medium.gen1
    steps:
      - checkout
      - run:
          name: Install npm packages
          command: npm ci
      - run:
          name: Build macOS binary
          command: npm run make
      - persist_to_workspace:
          root: .
          paths:
            - out/

  build-linux:
    executor: linux
    steps:
      - checkout
      - run: sudo apt-get update && sudo apt-get install libarchive13 rpm dpkg fakeroot
      - run:
          name: Install npm packages
          command: npm ci
      - run:
          name: Build Linux binary
          command: npm run make
      - persist_to_workspace:
          root: .
          paths:
            - out/

  deploy:
    executor: linux
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Install GitHub CLI
          command: |
            curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
            sudo apt-key add /usr/share/keyrings/githubcli-archive-keyring.gpg
            echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
            sudo apt update
            sudo apt install gh
      - run:
          name: Upload binaries to GitHub Release
          command: |
            CURRENT_VERSION=$(jq -r .version package.json)
            LATEST_VERSION=$(gh release list --limit 1 --json tagName --jq '.[0].tagName' | sed 's/^v//')
            if [ "$(printf '%s\n%s\n' "$LATEST_VERSION" "$CURRENT_VERSION" | sort -V | head -n1)" = "$LATEST_VERSION" ] && [ "$LATEST_VERSION" != "$CURRENT_VERSION" ]; then
              echo "New version $CURRENT_VERSION is greater than $LATEST_VERSION"
              ls out
              gh release create "v$CURRENT_VERSION" out/make/deb/x64/* out/make/rpm/x64/* out/make/squirrel.windows/x64/StakeLauncher* out/make/zip/darwin/arm64/* --title "Release v$CURRENT_VERSION" --notes "Automated release of binaries"
            else
              echo "Current version $CURRENT_VERSION is not greater than $LATEST_VERSION. Skipping deployment."
            fi
      - when:
          condition:
            equal: [main, << pipeline.git.branch >>]
          steps:
            - run:
                name: Prep message
                command: |
                  echo 'export combined="ðŸŸ© Build << pipeline.number >> available!"' >> "$BASH_ENV"
            - twilio/install
            - twilio/sendsms:
                to: $PHONE_1
                body: $(echo -e "$combined")
            - twilio/sendsms:
                to: $PHONE_2
                body: $(echo -e "$combined")
workflows:
  version: 2
  build-and-deploy:
    jobs:
#      - build-windows
#      - build-macos
      - build-linux
      - deploy:
          requires:
#            - build-windows
#            - build-macos
            - build-linux
